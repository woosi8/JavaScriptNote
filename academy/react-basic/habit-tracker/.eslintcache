[{"C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habit.jsx":"1","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habitAddForm.jsx":"2","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\app.jsx":"3","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\simpleHabit.jsx":"4","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\index.js":"5","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\navbar.jsx":"6","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habits.jsx":"7"},{"size":1541,"mtime":1611671292084,"results":"8","hashOfConfig":"9"},{"size":1539,"mtime":1611671515478,"results":"10","hashOfConfig":"9"},{"size":2366,"mtime":1611671321243,"results":"11","hashOfConfig":"9"},{"size":1493,"mtime":1611715453313,"results":"12","hashOfConfig":"9"},{"size":458,"mtime":1611671835331,"results":"13","hashOfConfig":"9"},{"size":407,"mtime":1611670821342,"results":"14","hashOfConfig":"9"},{"size":1332,"mtime":1611671081920,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ff6xx",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habit.jsx",[],"C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habitAddForm.jsx",[],"C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\app.jsx",["33"],"import React, { Component } from 'react';\r\nimport './app.css';\r\nimport Habits from './components/habits';\r\nimport Navbar from './components/navbar';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    habits: [\r\n        {id: 1, name:'Reading', count:0},\r\n        {id: 2, name:'Running', count:0},\r\n        {id: 3, name:'Coding', count:0},\r\n    ]\r\n\r\n  };\r\n\r\n  handleIncrement =(habit) =>{\r\n    // habit.count++;\r\n    // 리액트에서는 State 오브젝트를 직접 수정하는 것은 좋지않다\r\n    // this.setState(this.state) //더한값을 업데이트 하기 (state 오브젝트 안에 있는 값을 변경을 하면 리액트는 모르기때문에 꼭 업데이트 해줘야한다)\r\n    const habitse = [...this.state.habits]\r\n    const index = habitse.indexOf(habit);\r\n    habitse[index].count++;\r\n    // this.setState({ habits: habits}) // 아래처럼 생략가능 key:value 가 같은경우\r\n    this.setState({habitse})\r\n  }\r\n\r\n  handleDecrement =(habit) =>{\r\n    const habitMinus = [...this.state.habits]\r\n    const index = habitMinus.indexOf(habit);\r\n    const counts = habitMinus[index].count - 1;\r\n    habitMinus[index].count = counts < 0 ? 0 : counts;\r\n    this.setState({habitMinus})\r\n  }\r\n\r\n  handleDelete =(habit) =>{\r\n    const habitsDel = this.state.habits.filter(item => item.id !== habit.id);\r\n    this.setState({habits : habitsDel});\r\n  }\r\n    \r\n\r\n  handleAdd =(name) =>{\r\n    const habits = [...this.state.habits, {id: Date.now(), name : name, count:0}];\r\n    this.setState({habits})\r\n  }\r\n\r\n  handleReset = () =>{\r\n    const handleDelete = [\r\n      {id: 1, name:'Reading', count:0},\r\n      {id: 2, name:'Running', count:0},\r\n      {id: 3, name:'Coding', count:0},\r\n  ]\r\n    const habits = this.state.habits.map(habit =>{\r\n      habit.count = 0;\r\n      return habit\r\n      });\r\n      this.setState({habits : handleDelete})\r\n  }\r\n\r\n\r\n    render() {\r\n      return (\r\n      <>\r\n        <Navbar totalCount = {this.state.habits.filter(item => item.count >0).length} />\r\n        <Habits  \r\n                habits = {this.state.habits}\r\n                onIncrement = {this.handleIncrement}\r\n                onDecrement = {this.handleDecrement}\r\n                onDelete = {this.handleDelete}\r\n                onAdd = {this.handleAdd}\r\n                onReset ={this.handleReset}\r\n        />\r\n      </>\r\n      );\r\n  }\r\n}\r\nexport default App;\r\n","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\simpleHabit.jsx",["34"],"import React, { useCallback,useEffect,useRef, useState } from 'react';\r\n\r\n\r\nconst SimpleHabit = (props) =>{\r\n    // React 훅\r\n    const [count, setCount] = useState(0);\r\n    const spanRef = useRef(); //리액트훅 버젼 (함수는 계속 전체 반복초기화되지만 이건 기억하고 있으라고 하는것)\r\n    // const spanRef = React.createRef()\r\n    const handleIncrement = useCallback(() => { //useCallback은 갱신떄마다 계속 업데이트를 방지하기위한 자동캐시, 동일한 콜백함수를 전달\r\n        setCount(count + 1);\r\n    });\r\n\r\n    // [count]가 변경될때마다 호출된다 , []안쓰면 기존의 state,prop이 변경될때마다 호출된다\r\n    useEffect(() =>{\r\n        console.log(`mounted & updated!: ${count}`);\r\n    },[count])\r\n\r\n    return (\r\n        <li className=\"habit\">\r\n            <span ref={spanRef} className=\"habit-name\">Reading</span>\r\n            <span className=\"habit-count\">{count}</span>\r\n            <button className=\"habit-button habit-increase\" onClick = {handleIncrement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n        </li>\r\n    );\r\n    \r\n};\r\n\r\nexport default SimpleHabit;\r\n\r\n\r\n\r\n// import React from 'react';\r\n// class SimpleHabit extends Component {\r\n//     state = {\r\n//         count:0,\r\n//     }\r\n//     handleIncrement = () => {\r\n//         this.setState({count: this.state.count+1});\r\n//     };\r\n//     render() {\r\n\r\n//     }\r\n// }\r\n\r\n// export default SimpleHabit;","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n// import reportWebVitals from './reportWebVitals';\n//ReactDOM이라는 클래스안에 있는 render함수\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App />  */}\n    <SimpleHabit />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\navbar.jsx",[],"C:\\Web\\EllieNote\\academy\\react-basic\\habit-tracker\\src\\components\\habits.jsx",[],{"ruleId":"36","severity":1,"message":"37","line":53,"column":11,"nodeType":"38","messageId":"39","endLine":53,"endColumn":17},{"ruleId":"40","severity":1,"message":"41","line":9,"column":29,"nodeType":"38","endLine":9,"endColumn":40},{"ruleId":"36","severity":1,"message":"42","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":11},"no-unused-vars","'habits' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'App' is defined but never used."]